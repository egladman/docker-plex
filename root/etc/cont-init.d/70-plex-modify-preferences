#!/usr/bin/with-contenv bash

XML_CONFIG="/config/Library/Application Support/Plex Media Server/Preferences.xml"

# Fallback to ALLOWED_NETWORKS value
NOAUTH_NETWORKS="${NOAUTH_NETWORKS:-$ALLOWED_NETWORKS}"

update_or_replace_attr() {
  # Usage: update_or_replace_attr <attribute> <value> <xmlpath>

  local element attribute_name attribute_value xml_path
  element="/Preferences"
  attribute_name="${1:?}"
  attribute_value="${2:?}"
  xml_path="${3:?}"

  xmlstarlet edit --inplace --insert "$element" --type attr --name "$attribute_name" --value "$attribute_value" "$xml_path"
  printf "%s\n" "File '${xml_path}' modified. Attribute '${attribute_name}' in element '${element}' updated to '${attribute_value}'."
}

ensure_xml_exists() {
  # Usage: ensure_xml_exists <xml_path>

  if [[ -e "${1:?}" ]]; then
     printf '%s\n' "File '$1' already exists. Skipping..."
     return
  fi

  printf '%s\n' "Creating '$1'"

  local parent
  parent="$(dirname "${1:?}")"

  if [[ ! -d "$parent" ]]; then
     mkdir -p "$parent"
  fi

  printf '%s\n' "<?xml version=\"1.0\" encoding=\"utf-8\"?><Preferences/>" > "$1"

  chown -R abc:abc "$parent"
}

main() {
  ensure_xml_exists "$XML_CONFIG"

  # Comma delimited string of ip cidr blocks that should be considered local
  if [[ -n "$ALLOWED_NETWORKS" ]]; then
    update_or_replace_attr allowedNetworks "$ALLOWED_NETWORKS" "$XML_CONFIG"
  fi

  # Comma delimited string of ip cidr blocks that shouldn't require auth
  if [[ -n "$NOAUTH_NETWORKS" ]]; then
    update_or_replace_attr LanNetworksBandwidth "$NOAUTH_NETWORKS" "$XML_CONFIG"
  fi

  # Comma delimited string of https/http urls used to access server
  if [[ -n "$ADVERTISE_URLS" ]]; then
    update_or_replace_attr allowedNetworks "$ADVERTISE_URLS" "$XML_CONFIG"
  fi

  # Human readable name used to identify server on clients
  if [[ -n "$SERVER_NAME" ]]; then
    update_or_replace_attr FriendlyName "$SERVER_NAME" "$XML_CONFIG"
  fi
}

main



